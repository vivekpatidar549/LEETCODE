class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        int len=0;
    ListNode *templen= head;
    while(templen!=NULL){
        templen=templen->next;
        len++;
    }

    if(head==NULL){
        return NULL;
    }
    if(len<k){
        return head;
    }
    // reverse 1st k nodes
    ListNode*next=NULL;
    ListNode* current= head;
    ListNode*prev=NULL;
    int count=0;
    // reverse karte he
    while(current!=NULL && count<k){
        next= current->next;
        current->next=prev;
        prev= current;
        current=next;
        count++;
    }
    // recursion
    if(next!=NULL){
        head->next = reverseKGroup(next,k);
    }
    // return head of reversed list
    return prev;
        
    }
};

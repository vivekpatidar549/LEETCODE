class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int rowsize = matrix.size();
        int colsize= matrix[0].size();
        vector<int> ans;
        int starting_row = 0;
        int starting_col= 0;
        int ending_col=colsize-1 ;
        int ending_row=rowsize-1;
        int count=0;
        int total=rowsize*colsize;
        while(count<total){
            // printing starting row
            for(int i= starting_col; i<=ending_col && (count<total); i++){
                ans.push_back(matrix[starting_row][i]);
                count++;

            }
            starting_row++;
            //priinting last column
            for(int i=starting_row ;i<=ending_row&& (count<total);i++){
                ans.push_back(matrix[i][ending_col]);
                count++;
            }
            ending_col --;

            // printing last row

            for (int i=ending_col;i>=starting_col &&(count<total);i--){
                ans.push_back(matrix[ending_row][i]);
                count++;
            }
            ending_row--;
            // printing first column

            for(int i=ending_row;i>=starting_row &&(count<total);i--){
                ans.push_back(matrix[i][starting_col]);
                count++;
            }

            starting_col++;
        }
        return ans;
        
    }
};
